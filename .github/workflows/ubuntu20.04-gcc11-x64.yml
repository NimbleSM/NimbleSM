name: Build and Test Ubuntu 20.04 gcc 11 x64

# Trigger the workflow on push or pull request
on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - develop-refactor
      - master
      - develop

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        mpi: [{name: "MPI", value: "ON"}, {name: "Serial", value: "OFF"}]
        kokkos: [{name: " + Kokkos", value: "ON"}, {name: "", value: "OFF"}]
        trilinos: [{name: " + Trilinos", value: "ON"}, {name: "", value: "OFF"}]
        arborx: [{name: " + ArborX", value: "ON"}, {name: "", value: "OFF"}]
        exclude:
          - kokkos: {name: " + Kokkos", value: "ON"}
            trilinos: {name: " + Trilinos", value: "ON"}
          - arborx: {name: " + ArborX", value: "ON"}
            kokkos: {name: "", value: "OFF"}
    env:
      OUTPUT_DIR: '/tmp/out'
    name: NimbleSM ${{ matrix.mpi.name }}${{ matrix.kokkos.name }}${{ matrix.trilinos.name }}${{ matrix.arborx.name }}
    steps:
      - uses: actions/checkout@v3
      - name: CI Variables
        id: vars
        run: echo "DOCKER_TAG=$(echo ${{ github.ref }} | cut -d'/' -f3- | sed 's/[^a-z0-9_-]/__/gi')" >> $GITHUB_ENV
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Inspect Builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"
          echo "DOCKER_TAG: ${{ env.DOCKER_TAG }}"
      - name: Build the Docker Image and Code
        id: docker_build
        continue-on-error: true
        uses: docker/build-push-action@v3
        with:
          push: false
          tags: ${{ env.DOCKER_TAG }}
          context: .
          file: ./ci/ubuntu20.04-gcc11-x64.dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            NimbleSM_ENABLE_MPI=${{ matrix.mpi.value }}
            NimbleSM_ENABLE_KOKKOS=${{ matrix.kokkos.value }}
            NimbleSM_ENABLE_TRILINOS=${{ matrix.trilinos.value }}
            NimbleSM_ENABLE_UQ=OFF
            NimbleSM_ENABLE_ARBORX=${{ matrix.arborx.value }}
          outputs: type=local,dest=${{ env.OUTPUT_DIR }}
      - name: Upload Test Log Files
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: NimbleSM-${{ matrix.mpi.name }}-${{ matrix.kokkos.name }}-${{ matrix.trilinos.name }}-${{ matrix.arborx.name }}-LastTestLogs
          path: ${{ env.OUTPUT_DIR }}
      - name: Determine Job Failure or Success
        run: |
          echo "Success Flag with 0 pass and 1 fail:"
          cat ${{ env.OUTPUT_DIR }}/tmp/artifacts/success_flag.txt
          echo "docker_build_outcome:  ${{ steps.docker_build.outcome }}"
          echo "docker_build_conclusion:  ${{ steps.docker_build.conclusion }}"
          if [[  $(cat ${{ env.OUTPUT_DIR }}/tmp/artifacts/success_flag.txt) -eq 0 ]]; then exit 0; else exit 1; fi
        shell: bash

name: Build and Test Ubuntu 20.04 gcc 11 x64

# Trigger the workflow on push or pull request
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, reopened, synchronize, converted_to_draft, ready_for_review]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    env:
      OUTPUT_DIR: '/tmp/out'
    name: NimbleSM serial build and test
    steps:
      - uses: actions/checkout@v3

      - name: CI Variables
        id: vars
        run: echo "DOCKER_TAG=$(echo ${{ github.ref }} | cut -d'/' -f3- | sed 's/[^a-z0-9_-]/__/gi')" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Inspect Builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"
          echo "DOCKER_TAG: ${{ env.DOCKER_TAG }}"

      - name: Build the Docker Image; build and test NimbleSM serial
        id: docker_build
        continue-on-error: true
        uses: docker/build-push-action@v3
        with:
          push: false
          tags: ${{ env.DOCKER_TAG }}
          context: .
          file: ./ci/build-and-test-from-serial-image.dockerfile
          outputs: type=local,dest=${{ env.OUTPUT_DIR }}

      - name: Upload Test Log Files
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: vt-tv-LastTestLogs
          path: ${{ env.OUTPUT_DIR }}

      - name: Determine Job Failure or Success
        run: |
          echo "Success Flag with 0 pass and 1 fail:"
          cat ${{ env.OUTPUT_DIR }}/tmp/artifacts/success_flag.txt
          if [[  $(cat ${{ env.OUTPUT_DIR }}/tmp/artifacts/success_flag.txt) -eq 0 ]]; then exit 0; else exit 1; fi
        shell: bash
